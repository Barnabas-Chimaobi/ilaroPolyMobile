//Menu.js
// /components/Menu.js
import React from 'react';
import {StyleSheet, Text, View, Image, AsyncStorage} from 'react-native';
import MaterialIcons from 'react-native-vector-icons/MaterialIcons';
import AntDesign from 'react-native-vector-icons/AntDesign';

const formatAMPM = (date) => {
  var hours = date.getHours();
  var minutes = date.getMinutes();
  var ampm = hours >= 12 ? 'pm' : 'am';
  hours = hours % 12;
  hours = hours ? hours : 12; // the hour '0' should be '12'
  minutes = minutes < 10 ? '0'+minutes : minutes;
  var strTime = hours + ':' + minutes + ' ' + ampm;
  return strTime;
}

const formatFullDate(dateISOString){
  const dt = new Date(dateISOString);
  return `${dt.toDateString()} ${formatAMPM(dt)}`;
}


dt
dt
Sat Apr 04 2020 00:00:00 GMT+0100 (West Africa Standard Time) {}
﻿
const dt = new Date("2020-04-04T00:00:00");
undefined
console.log(dt);
VM273:1 Sat Apr 04 2020 00:00:00 GMT+0100 (West Africa Standard Time)
undefined
console.log(dt.getUTCDate);
VM444:1 ƒ getUTCDate() { [native code] }
undefined
console.log(dt.toLocaleDateString());
VM520:1 4/4/2020
undefined
console.log(dt.toDateString());
VM662:1 Sat Apr 04 2020
undefined
console.log(dt.toTimeString());
VM969:1 00:00:00 GMT+0100 (West Africa Standard Time)
undefined
function formatAMPM(date) {
  var hours = date.getHours();
  var minutes = date.getMinutes();
  var ampm = hours >= 12 ? 'pm' : 'am';
  hours = hours % 12;
  hours = hours ? hours : 12; // the hour '0' should be '12'
  minutes = minutes < 10 ? '0'+minutes : minutes;
  var strTime = hours + ':' + minutes + ' ' + ampm;
  return strTime;
}

console.log(formatAMPM(dt);
VM1299:12 Uncaught SyntaxError: missing ) after argument list
console.log(formatAMPM(dt));
VM1420:1 Uncaught ReferenceError: formatAMPM is not defined
    at <anonymous>:1:9
function formatAMPM(date) {
  var hours = date.getHours();
  var minutes = date.getMinutes();
  var ampm = hours >= 12 ? 'pm' : 'am';
  hours = hours % 12;
  hours = hours ? hours : 12; // the hour '0' should be '12'
  minutes = minutes < 10 ? '0'+minutes : minutes;
  var strTime = hours + ':' + minutes + ' ' + ampm;
  return strTime;
}
undefined

const Menu = (props) => {
  const { state, setParams, navigate } = props.navigation;
  const params = state.params || {}
  const { Id, FirstName, OtherName, FullName, ImageFileUrl } = params.PersonDetails;

  return (
    <View style={styles.Menucontainer}>
      <View>
        <Image
            style={styles.profileImage}
            source={{uri: ImageFileUrl}}
          /> 
      </View>
  <Text>{FullName}</Text>
      <View style={styles.board}>
        <View style={styles.eachIcon}>
          <MaterialIcons
            name="dashboard"
            size={25}
            color="green"
            style={styles.icon}
          />
          <Text
            style={styles.boardText}
            onPress={() => {
              this.props.navigation.navigate('Dashboard');
              this.props.closeDrawer();
            }}>
            Dashboard
          </Text>
          <View></View>
        </View>

        <View style={styles.eachIcon}>
          <MaterialIcons
            name="person"
            size={25}
            color="green"
            style={styles.icon}
          />
          <Text
            onPress={() => {
              this.props.navigation.navigate('Profile');
              this.props.closeDrawer();
            }}
            style={styles.boardText}>
            My Profile
          </Text>
        </View>

        <View style={styles.eachIcon}>
          <MaterialIcons
            name="notifications"
            size={25}
            color="green"
            style={styles.icon}
          />
          <Text
            onPress={() => {
              this.props.navigation.navigate('Notifications');
              this.props.closeDrawer();
            }}
            style={styles.boardText}>
            Notifications
          </Text>
        </View>

        <View style={styles.eachIcon}>
          <MaterialIcons
            name="comment"
            size={25}
            color="green"
            style={styles.icon}
          />
          <Text
            style={styles.boardText}
            onPress={() => {
              this.props.navigation.navigate('Dashboard');
              this.props.closeDrawer();
            }}>
            Join Conversation
          </Text>
          <View></View>
        </View>

        <View style={styles.eachIcon}>
          <MaterialIcons
            name="settings"
            size={25}
            color="green"
            style={styles.icon}
          />
          <Text
            onPress={() => {
              this.props.navigation.navigate('Profile');
              this.props.closeDrawer();
            }}
            style={styles.boardText}>
            Settings
          </Text>
        </View>

        <View style={styles.eachIcon}>
          <MaterialIcons
            name="vpn-key"
            size={25}
            color="green"
            style={styles.icon}
          />
          <Text
            onPress={() => {
              this.props.navigation.navigate('Notifications');
              this.props.closeDrawer();
            }}
            style={styles.boardText}>
            Sign Out
          </Text>
        </View>
      </View>
    </View>
  );
};

export default Menu;

const styles = StyleSheet.create({
  Menucontainer: {
    flex: 1,
  },
  board: {
    marginLeft: 'auto',
    marginRight: 'auto',
    borderColor: 'white',
    borderStyle: 'solid',
    height: 450,
    width: 350,
  },
  boardText: {
    fontSize: 20,
    marginLeft: 20,
    marginTop: -25,
    marginLeft: 70,
  },
  icon: {
    marginTop: 10,
    marginLeft: 20,
  },
  eachIcon: {
    borderBottomColor: 'lightgrey',
    paddingBottom: 7,
    marginTop: 20
  },
  profileImage: {
    height: 150,
    width: 150,
    alignSelf: "center"
  },
});



//Menu.js
// /components/Menu.js
import React from 'react';
import {StyleSheet, Text, View, Image, AsyncStorage} from 'react-native';
import MaterialIcons from 'react-native-vector-icons/MaterialIcons';
import AntDesign from 'react-native-vector-icons/AntDesign';

const Menu = props => {
  let Id, FirstName, OtherName, FullName, ImageFileUrl;
  AsyncStorage.getItem("PersonDetails").then(dtr => {
    dtr = JSON.parse(dtr);
    console.log("ERROR: ", dtr);
    
    ImageFileUrl = dtr.ImageFileUrl;
    FullName = dtr.FullName,
    Id = dtr.Id
  })
  return (
    <View style={styles.Menucontainer}>
      <View>
        <Image
            style={styles.profileImage}
            source={{uri: ImageFileUrl}}
          /> 
      </View>
  <Text>RRRR: {FullName}</Text>
      <View style={styles.board}>
        <View style={styles.eachIcon}>
          <MaterialIcons
            name="dashboard"
            size={25}
            color="green"
            style={styles.icon}
          />
          <Text
            style={styles.boardText}
            onPress={() => {
              this.props.navigation.navigate('Dashboard');
              this.props.closeDrawer();
            }}>
            Dashboard
          </Text>
          <View></View>
        </View>

        <View style={styles.eachIcon}>
          <MaterialIcons
            name="person"
            size={25}
            color="green"
            style={styles.icon}
          />
          <Text
            onPress={() => {
              this.props.navigation.navigate('Profile');
              this.props.closeDrawer();
            }}
            style={styles.boardText}>
            My Profile
          </Text>
        </View>

        <View style={styles.eachIcon}>
          <MaterialIcons
            name="notifications"
            size={25}
            color="green"
            style={styles.icon}
          />
          <Text
            onPress={() => {
              this.props.navigation.navigate('Notifications');
              this.props.closeDrawer();
            }}
            style={styles.boardText}>
            Notifications
          </Text>
        </View>

        <View style={styles.eachIcon}>
          <MaterialIcons
            name="comment"
            size={25}
            color="green"
            style={styles.icon}
          />
          <Text
            style={styles.boardText}
            onPress={() => {
              this.props.navigation.navigate('Dashboard');
              this.props.closeDrawer();
            }}>
            Join Conversation
          </Text>
          <View></View>
        </View>

        <View style={styles.eachIcon}>
          <MaterialIcons
            name="settings"
            size={25}
            color="green"
            style={styles.icon}
          />
          <Text
            onPress={() => {
              this.props.navigation.navigate('Profile');
              this.props.closeDrawer();
            }}
            style={styles.boardText}>
            Settings
          </Text>
        </View>

        <View style={styles.eachIcon}>
          <MaterialIcons
            name="vpn-key"
            size={25}
            color="green"
            style={styles.icon}
          />
          <Text
            onPress={() => {
              this.props.navigation.navigate('Notifications');
              this.props.closeDrawer();
            }}
            style={styles.boardText}>
            Sign Out
          </Text>
        </View>
      </View>
    </View>
  );
};

export default Menu;

const styles = StyleSheet.create({
  Menucontainer: {
    flex: 1,
  },
  board: {
    marginLeft: 'auto',
    marginRight: 'auto',
    borderColor: 'white',
    borderStyle: 'solid',
    height: 450,
    width: 350,
  },
  boardText: {
    fontSize: 20,
    marginLeft: 20,
    marginTop: -25,
    marginLeft: 70,
  },
  icon: {
    marginTop: 10,
    marginLeft: 20,
  },
  eachIcon: {
    borderBottomColor: 'lightgrey',
    paddingBottom: 7,
    marginTop: 20
  },
  profileImage: {
    height: 150,
    width: 150,
    alignSelf: "center"
  },
});



   "@react-native-community/masked-view": "^0.1.7",
    "formik": "^2.1.4",
    "react": "16.11.0",
    "react-native": "0.62.0",
    "react-native-drawer": "^2.5.1",
    "react-native-gesture-handler": "^1.6.1",
    "react-native-material-dropdown": "^0.11.1",
    "react-native-reanimated": "^1.7.1",
    "react-native-responsive-screen": "^1.4.1",
    "react-native-safe-area-context": "^0.7.3",
    "react-native-safe-area-view": "^1.0.0",
    "react-native-screens": "^2.4.0",
    "react-native-table-component": "^1.2.1",
    "react-native-vector-icons": "^6.6.0",
    "react-native-webview": "^9.0.2",
    "react-navigation": "^4.3.3",
    "react-navigation-drawer": "^2.4.7",
    "react-navigation-stack": "^2.3.7"


    courseId: this.state.newCourse


    <Text>{items.Url.substring([20], items.Url.length).split(".")[0]}</Text>


  <View>
        {params.newArray.map((items, index) => {
          return (
            (items.VideoUrl && typeof items.VideoUrl !== "undefined") ? 
            <View>
              <SectionList
                sections={[
                  {title: 'Videos', data: [items.VideoUrl]},
                ]}
                renderItem={({item}) => (
                  <View style={styles.container1}>
                    <View>
                    <Text>{items.VideoUrl}</Text>
                    </View>

                    <View>
                    <TouchableOpacity
                    onPress={() => {
                      (items.VideoUrl && typeof items.VideoUrl !== "undefined") ?
                       Linking.openURL(item) : Alert.alert("There is no video content to display");
                    }}>
                    <Text style={styles.item}>play</Text>
                  </TouchableOpacity>
                    </View>

                    </View>
               
                )}
                // renderSectionHeader={({section}) => (
                //   <Text style={styles.sectionHeader}>{section.title}</Text>
                // )}
                keyExtractor={(item, index) => index}
              />
              
            </View>
          : null
          );
        })}
      </View>